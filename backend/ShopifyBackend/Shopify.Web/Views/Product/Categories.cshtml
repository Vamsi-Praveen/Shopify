@{
    ViewData["Title"] = "Product Categories";
}

<div class="p-4 space-y-6">
    <div class="flex items-center justify-between items-start gap-3">
        <div>
            <h1 class="text-2xl font-semibold text-gray-800">Product Categories</h1>
            <p class="text-sm text-gray-500">Manage all your product Categories.</p>
        </div>
        <div>
            <button onclick="openCategoryModal()"
                    class="px-4 py-2 text-sm font-medium text-white bg-emerald-600 border border-transparent rounded-sm cursor-pointer shadow-sm hover:bg-emerald-700 flex items-center gap-2">
                <i class="ph ph-plus-circle text-lg"></i>
                Add New Category
            </button>
        </div>
    </div>
    <div>
    </div>
</div>
<div class="hidden absolute bg-black/60 inset-0 flex items-center justify-center" id="category-modal">
    <div class="bg-white rounded-[4px] border border-gray-300 w-2/4 p-3 px-5 space-y-3 relative">
        <button class="absolute top-3 right-3 cursor-pointer" onclick="closeCategoryModal()">
            <i class="ph-bold ph-x text-xl"></i>
        </button>
        <div>
            <h1 class="text-2xl font-semibold text-gray-800">Add Product Category</h1>
            <p class="text-sm text-gray-500">Create new product category</p>
        </div>
        <div>
            <form method="post" class="space-y-3">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Brand Name</label>
                    <input type="text" placeholder="e.g. Amul"
                           class="w-full px-3 py-2 border border-gray-200 rounded-sm outline-none" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Brand Description</label>
                    <textarea rows="5" placeholder="Enter Description"
                              class="w-full px-3 py-2 border border-gray-200 rounded-sm outline-none"></textarea>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Brand Logo</label>
                    <div class="mt-1 flex items-center gap-4 p-4 border-2 border-gray-300 border-dashed rounded-md">
                        <div id="thumbnail-preview-container" class="shrink-0">
                            <img id="thumbnail-preview" src="#" alt="Thumbnail Preview" class="h-20 w-20 object-cover rounded hidden" />
                            <div id="thumbnail-placeholder" class="h-20 w-20 bg-gray-100 rounded flex items-center justify-center text-gray-400">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                            </div>
                        </div>

                        <div class="flex-grow">
                            <label for="thumbnail-upload" class="cursor-pointer bg-white py-2 px-3 border border-gray-300 rounded-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500">
                                <span>Upload a file</span>
                            </label>
                            <input id="thumbnail-upload" name="thumbnailFile" type="file" class="sr-only" accept="image/png, image/jpeg, image/gif, image/webp">
                            <p class="text-xs text-gray-500 mt-4">PNG, JPG, GIF, WEBP up to 2MB.</p>
                            <p id="thumbnail-filename" class="text-sm text-gray-700 mt-1"></p>
                        </div>
                        <button type="button" id="remove-thumbnail-button" class="ml-auto text-sm text-red-600 hover:text-red-800 hidden cursor-pointer" onclick="removeThumbnail()">
                            Remove
                        </button>
                    </div>
                </div>
                <div class="flex justify-end">
                    <button type="submit"
                            class="bg-emerald-600 hover:bg-emerald-700 transition text-white rounded-sm px-4 py-2 cursor-pointer flex items-center gap-2">
                        <i class="ph ph-plus text-lg"></i>
                        Create Category
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>



<script>
    const categoryModal = document.getElementById("category-modal")

    const thumbnailUpload = document.getElementById('thumbnail-upload');
    const thumbnailPreview = document.getElementById('thumbnail-preview');
    const thumbnailPlaceholder = document.getElementById('thumbnail-placeholder');
    const thumbnailFilename = document.getElementById('thumbnail-filename');
    const removeThumbnailButton = document.getElementById('remove-thumbnail-button');

    thumbnailUpload.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
            const validImageTypes = ['image/png', 'image/jpeg', 'image/gif', 'image/webp'];
            if (!validImageTypes.includes(file.type)) {
                alert('Invalid file type. Please select a PNG, JPG, GIF, or WEBP file.');
                thumbnailUpload.value = '';
                return;
            }
            if (file.size > 2 * 1024 * 1024) {
                alert('File is too large. Maximum size is 2MB.');
                thumbnailUpload.value = '';
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                thumbnailPreview.src = e.target.result;
                thumbnailPreview.classList.remove('hidden');
                thumbnailPlaceholder.classList.add('hidden');
            }
            reader.readAsDataURL(file);
            thumbnailFilename.textContent = file.name;
            removeThumbnailButton.classList.remove('hidden');
        } else {
            removeThumbnail();
        }
    });

    function removeThumbnail() {
        thumbnailPreview.src = '#';
        thumbnailPreview.classList.add('hidden');
        thumbnailPlaceholder.classList.remove('hidden');
        thumbnailUpload.value = '';
        thumbnailFilename.textContent = '';
        removeThumbnailButton.classList.add('hidden');
    }

    function closeCategoryModal(){
        categoryModal.classList.add("hidden")
    }

    function openCategoryModal(){
        categoryModal.classList.remove("hidden")
    }

</script>